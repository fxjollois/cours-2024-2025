print(montant)
nb_actif = 19
nb_retraite = 37
annee = 1:(nb_actif+nb_retraite)
liste_montant = c()
interet = 3
ajout = 100
retrait = 107
montant = ajout * 12
for (i in 1:length(annee)) {
if (i <= nb_actif)
montant = montant * (1 + interet / 100) + ajout * 12
else
montant = montant * (1 + interet / 100) - retrait * 12
liste_montant[i] = montant
}
plot(annee, liste_montant, type = 'l')
print(montant)
nb_actif = 17
nb_retraite = 37
annee = 1:(nb_actif+nb_retraite)
liste_montant = c()
interet = 3
ajout = 100
retrait = 107
montant = ajout * 12
for (i in 1:length(annee)) {
if (i <= nb_actif)
montant = montant * (1 + interet / 100) + ajout * 12
else
montant = montant * (1 + interet / 100) - retrait * 12
liste_montant[i] = montant
}
plot(annee, liste_montant, type = 'l')
print(montant)
nb_actif = 17
nb_retraite = 37
annee = 1:(nb_actif+nb_retraite)
liste_montant = c()
interet = 3
ajout = 100
retrait = 106
montant = ajout * 12
for (i in 1:length(annee)) {
if (i <= nb_actif)
montant = montant * (1 + interet / 100) + ajout * 12
else
montant = montant * (1 + interet / 100) - retrait * 12
liste_montant[i] = montant
}
plot(annee, liste_montant, type = 'l')
print(montant)
nb_actif = 17
nb_retraite = 37
annee = 1:(nb_actif+nb_retraite)
liste_montant = c()
interet = 3
ajout = 100
retrait = 107
montant = ajout * 12
for (i in 1:length(annee)) {
if (i <= nb_actif)
montant = montant * (1 + interet / 100) + ajout * 12
else
montant = montant * (1 + interet / 100) - retrait * 12
liste_montant[i] = montant
}
plot(annee, liste_montant, type = 'l')
print(montant)
nb_actif = 18
nb_retraite = 37
annee = 1:(nb_actif+nb_retraite)
liste_montant = c()
interet = 3
ajout = 100
retrait = 107
montant = ajout * 12
for (i in 1:length(annee)) {
if (i <= nb_actif)
montant = montant * (1 + interet / 100) + ajout * 12
else
montant = montant * (1 + interet / 100) - retrait * 12
liste_montant[i] = montant
}
plot(annee, liste_montant, type = 'l')
print(montant)
nb_actif = 18
nb_retraite = 37
annee = 1:(nb_actif+nb_retraite)
liste_montant = c()
interet = 2
ajout = 100
retrait = 107
montant = ajout * 12
for (i in 1:length(annee)) {
if (i <= nb_actif)
montant = montant * (1 + interet / 100) + ajout * 12
else
montant = montant * (1 + interet / 100) - retrait * 12
liste_montant[i] = montant
}
plot(annee, liste_montant, type = 'l')
print(montant)
nb_actif = 19
nb_retraite = 37
annee = 1:(nb_actif+nb_retraite)
liste_montant = c()
interet = 2
ajout = 100
retrait = 107
montant = ajout * 12
for (i in 1:length(annee)) {
if (i <= nb_actif)
montant = montant * (1 + interet / 100) + ajout * 12
else
montant = montant * (1 + interet / 100) - retrait * 12
liste_montant[i] = montant
}
plot(annee, liste_montant, type = 'l')
print(montant)
nb_actif = 20
nb_retraite = 37
annee = 1:(nb_actif+nb_retraite)
liste_montant = c()
interet = 2
ajout = 100
retrait = 107
montant = ajout * 12
for (i in 1:length(annee)) {
if (i <= nb_actif)
montant = montant * (1 + interet / 100) + ajout * 12
else
montant = montant * (1 + interet / 100) - retrait * 12
liste_montant[i] = montant
}
plot(annee, liste_montant, type = 'l')
print(montant)
interets = c(171.11, 170.13, 169.15)
plot(interets)
plot(interets, type = "l")
interets = c(rep(NA, 14), 171.11, 170.13, 169.15)
mois = 1:17
plot(interets, type = "l")
170.13-169.15
169.15-17*0,98
169.15-17*0.98
int = 0.98 * mois + 152.49
plot(int)
int = -0.98 * mois + 152.49
plot(int, type = "l")
plot(interets, col = "red")
plot(int, type = "l")
points(interets, col = "red")
169.15+17*0.98
int = -0.98 * mois + 185.81
plot(int, type = "l")
points(interets, col = "red")
sum(int[1:12])
sum(int)
mat = matrix("--", 4, 4)
mat
paste(rep(LETTERS))
paste(rep(LETTERS[1:4], each = 4), rep(1:4, 4))
paste0(rep(LETTERS[1:4], each = 4), rep(1:4, 4))
matrix(paste0(rep(LETTERS[1:4], each = 4), rep(1:4, 4)), 4, )
matrix(paste0(rep(LETTERS[1:4], each = 4), rep(1:4, 4)), 4, 4)
t(matrix(paste0(rep(LETTERS[1:4], each = 4), rep(1:4, 4)), 4, 4))
mat0 = t(matrix(paste0(rep(LETTERS[1:4], each = 4), rep(1:4, 4)), 4, 4))
readLines("Downloads/Cartes enseignes.html")
lines = readLines("Downloads/Cartes enseignes.html")
lines[1214]
strplit(lines[1214], "alt")
strsplit(lines[1214], "alt")
strsplit(strsplit(lines[1214], "alt"), "src=")
strsplit(strsplit(lines[1214], "alt"), "src")
strsplit(lines[1214], "img data-v-836c5d9e=\"\"")
strsplit(lines[1214], "img data-v-836c5d9e=\"\" alt=")
strsplit(strsplit(lines[1214], "img data-v-836c5d9e=\"\" alt="), "src")
lapply(strsplit(lines[1214], "img data-v-836c5d9e=\"\""), function(e) {})
ltrim
??trimws
??left
"bonjour"
a = "bonjour"
a[1:3]
substring
lapply(strsplit(lines[1214], "img data-v-836c5d9e=\"\""), function(e) { substring(e, 1, 15)})
lapply(strsplit(lines[1214], "img data-v-836c5d9e=\"\" alt="), function(e) { substring(e, 1, 15)})
lapply(strsplit(lines[1214], "img data-v-836c5d9e=\"\" alt="), function(e) { substring(e, 1, 40)})
strsplit(lines[1214], "img data-v-836c5d9e=\"\" alt=")[-1]
strsplit(lines[1214], "img data-v-836c5d9e=\"\" alt=")[[-1]]
strsplit(lines[1214], "img data-v-836c5d9e=\"\" alt=")[2:157
]
strsplit(lines[1214], "img data-v-836c5d9e=\"\" alt=")
strsplit(strsplit(lines[1214], "img data-v-836c5d9e=\"\" alt=")[[1]], "src=")
lapply(strsplit(strsplit(lines[1214], "img data-v-836c5d9e=\"\" alt=")[[1]], "src="), function(e) { e[1] })
sapply(strsplit(strsplit(lines[1214], "img data-v-836c5d9e=\"\" alt=")[[1]], "src="), function(e) { e[1] })
sort(sapply(strsplit(strsplit(lines[1214], "img data-v-836c5d9e=\"\" alt=")[[1]], "src="), function(e) { e[1] }))
replace("\"", "", sort(sapply(strsplit(strsplit(lines[1214], "img data-v-836c5d9e=\"\" alt=")[[1]], "src="), function(e) { e[1] })))
sort(sapply(strsplit(strsplit(lines[1214], "img data-v-836c5d9e=\"\" alt=")[[1]], "src="), function(e) { e[1] }))
gsub("\"", "", sort(sapply(strsplit(strsplit(lines[1214], "img data-v-836c5d9e=\"\" alt=")[[1]], "src="), function(e) { e[1] })))
cat(gsub("\"", "", sort(sapply(strsplit(strsplit(lines[1214], "img data-v-836c5d9e=\"\" alt=")[[1]], "src="), function(e) { e[1] )})))
cat(gsub("\"", "", sort(sapply(strsplit(strsplit(lines[1214], "img data-v-836c5d9e=\"\" alt=")[[1]], "src="), function(e) { e[1] }))))
a = gsub("\"", "", sort(sapply(strsplit(strsplit(lines[1214], "img data-v-836c5d9e=\"\" alt=")[[1]], "src="), function(e) { e[1] })))
a
a[-1]
cat(a[-1])
paste(a[-1], collapse= ", ")
x = rnorm(1000, 18, 9)
mean(x)
sd(x)
scale(y)
scale(x)
y = scale(x)
y = scale(x)
mean(y)
sd(y)
z = (x - mean(x)) / sd(x)
mean(z)
sd(z)
repertoire = "~/Pictures/RUSTHEAD - photos - 2023-10-07/JPEG-original/"
library(imager)
resize_images = function(repertoire) {
images = dir(path = repertoire, pattern = "*.jpg")
cat("Resize des images du répertoire :", repertoire, "\n")
for (i in images) {
img = load.image(paste(repertoire, i, sep = "/"))
img_half = resize_halfXY(img)
save.image(img_half, paste(repertoire, gsub(".jpg", "-small.jpg", i), sep = "/"))
cat(".")
}
cat("\nFin\n")
}
resize_images(repertoire)
library(imager)
resize_images = function(repertoire) {
images = dir(path = repertoire, pattern = "*.JPG")
cat("Resize des images du répertoire :", repertoire, "\n")
for (i in images) {
img = load.image(paste(repertoire, i, sep = "/"))
img_half = resize_halfXY(img)
save.image(img_half, paste(repertoire, gsub(".jpg", "-small.jpg", i), sep = "/"))
cat(".")
}
cat("\nFin\n")
}
resize_images(repertoire)
library(imager)
resize_images = function(repertoire) {
images = dir(path = repertoire, pattern = "*.JPG")
cat("Resize des images du répertoire :", repertoire, "\n")
for (i in images) {
img = load.image(paste(repertoire, i, sep = "/"))
img_half = resize_halfXY(img)
save.image(img_half, paste(repertoire, gsub(".JPG", "-small.jpg", i), sep = "/"))
cat(".")
}
cat("\nFin\n")
}
resize_images(repertoire)
pnorm(.05)
qnorm(.05)
qnorm(.025)
??student
?qnorm
qt(.025)
qt(.025, 20)
qt(.025, 30)
qt(.025, 50)
qt(.025, 100)
qt(.025, 1000)
qt(.025, 10000)
qt(.025, 100000)
qt(.025, 1000000)
qt(.025, 10000000)
qt(.025, 100000000)
m = 610,22
m = 610.22
s = 111.53
m - 1.96 * s / n
n = 9
m - 1.96 * s / sqrt(n)
m + 1.96 * s / sqrt(n)
p = 0,3
p = 0.3
n = 500
p - 1.96 * sqrt( p * (1 - p) / n)
p + 1.96 * sqrt( p * (1 - p) / n)
m = 15.1
s = 3.1
n = 300
m - 1.96 * s / sqrt(n)
m + 1.96 * s / sqrt(n)
m = 15.9
s = 2.9
m - 1.96 * s / sqrt(n)
m + 1.96 * s / sqrt(n)
sqrt(68)
sqrt(59)
m = 807
s = 9
n = 200
m - 1.96 * s / sqrt(n)
m + 1.96 * s / sqrt(n)
m = 805
s = 8
m - 1.96 * s / sqrt(n)
m + 1.96 * s / sqrt(n)
install.packages("readODS")
library(readODS)
data = read_ods("fxjolloisupd@gmail.com - Google Drive/Mon Drive/BUT SD VCOD FA - resp/2023-2024/Planning/Verif ADE/verif_codeX_S5.ods")
data
library(dplyr)
data %>% arrange(Code.X)
data %>%
group_by(Activité) %>%
group_map(~ unique(.x$Code.X))
data %>%
group_by(Activité) %>%
group_map(~ unique(.x$Code.X), .keep = TRUE)
data %>%
group_by(Activité) %>%
group_map(~ unique(.x$Code.X))
unique(data$Activité)
for (m in unique(data$Activité)) {
cat("Activité : ", m, "\n")
data %>% filter(Activité == m)
}
for (m in unique(data$Activité)) {
cat("Activité : ", m, "\n")
print(unique((data %>% filter(Activité == m))$Code.X))
cat("\n")
}
156*3/2
156*4/3
library(mongolite)
install.packages("mongolite")
library(mongolite)
m = mongo(collection = "test", db = "test")
m$count()
m = mongo(collection = "restaurants", db = "test")
m$count()
d = m$find(limit = 1)
d
d
class(d)
help(m$find)
?mongo
d = m$find(limit = 10)
d
View(d)
View(d[[7]][[1]])
class(d$address)
d$address
class(d$grades)
d$grades
toJSON
library(jsonlite)
l = list(borough = q)
l
l = list(borough = "Bronx")
c = toJSON(l, auto_unbox = T)
l
c
c = toJSON(l, auto_unbox = F)
c
c = toJSON(l, auto_unbox = T)
c
m$count(query = c)
m$count(query = '{ "borough": "Bronx" }')
m$count(query = '{ "borough": "Bronx }')
m$count(query = '{ "borough": 'Bronx' }')
m$count(query = '{ "borough": "Bronx" }')
liste = lapply(1:nrow(df), function (i) {
grades = df$grades[[i]]
infos = df[rep(i, nrow(grades)),]
infos$grades = NULL
cbind(infos, grades)
})
liste
df
df = m$find()
liste = lapply(1:nrow(df), function (i) {
grades = df$grades[[i]]
infos = df[rep(i, nrow(grades)),]
infos$grades = NULL
cbind(infos, grades)
})
liste
df_grades = Reduce(rbind, liste)
df_grades
install.package("shinydashbord")
install.packages("shinydashbord")
install.packages("shinydashbord")
install.package("shinydashbord")
install.package("shinydashboard")
install.packages("shinydashboard")
install.packages("htmlwidgets")
install.packages("htmltools")
install.packages(c("DT", "formattable", "sparkline", "leaflet"))
shiny::runApp('Nextcloud/Pédagogie-Administration/Année 2023-2024/Enseignements/UFR BMSF - M1 AMSD-MLSD/Prog Web 2/shnydashboard')
?validStatuses
runApp('Nextcloud/Pédagogie-Administration/Année 2023-2024/Enseignements/UFR BMSF - M1 AMSD-MLSD/Prog Web 2/shnydashboard')
?box
runApp('Nextcloud/Pédagogie-Administration/Année 2023-2024/Enseignements/UFR BMSF - M1 AMSD-MLSD/Prog Web 2/shnydashboard')
runApp('Nextcloud/Pédagogie-Administration/Année 2023-2024/Enseignements/UFR BMSF - M1 AMSD-MLSD/Prog Web 2/shnydashboard')
runApp('Nextcloud/Pédagogie-Administration/Année 2023-2024/Enseignements/UFR BMSF - M1 AMSD-MLSD/Prog Web 2/shnydashboard')
?infoBox
runApp('Nextcloud/Pédagogie-Administration/Année 2023-2024/Enseignements/UFR BMSF - M1 AMSD-MLSD/Prog Web 2/shnydashboard')
runApp('Nextcloud/Pédagogie-Administration/Année 2023-2024/Enseignements/UFR BMSF - M1 AMSD-MLSD/Prog Web 2/shnydashboard')
?tags
runApp('Nextcloud/Pédagogie-Administration/Année 2023-2024/Enseignements/UFR BMSF - M1 AMSD-MLSD/Prog Web 2/shnydashboard')
runApp('Nextcloud/Pédagogie-Administration/Année 2023-2024/Enseignements/UFR BMSF - M1 AMSD-MLSD/Prog Web 2/shnydashboard')
??tags
tags()
tags$div
runApp('Nextcloud/Pédagogie-Administration/Année 2023-2024/Enseignements/UFR BMSF - M1 AMSD-MLSD/Prog Web 2/shnydashboard')
runApp('Nextcloud/Pédagogie-Administration/Année 2023-2024/Enseignements/UFR BMSF - M1 AMSD-MLSD/Prog Web 2/shnydashboard')
runApp('Nextcloud/Pédagogie-Administration/Année 2023-2024/Enseignements/UFR BMSF - M1 AMSD-MLSD/Prog Web 2/shnydashboard')
?conditionalPanel
runApp('Nextcloud/Pédagogie-Administration/Année 2023-2024/Enseignements/UFR BMSF - M1 AMSD-MLSD/Prog Web 2/shnydashboard')
runApp('Nextcloud/Pédagogie-Administration/Année 2023-2024/Enseignements/UFR BMSF - M1 AMSD-MLSD/Prog Web 2/correction')
runApp('Nextcloud/Pédagogie-Administration/Année 2023-2024/Enseignements/UFR BMSF - M1 AMSD-MLSD/Prog Web 2/correction')
iris
data = iris[,-5]
cor(data)
data * cor(data)
data * cor(data) - data
temp = data * cor(data) - data
abs(temp) > 10
which(abs(temp) > 10)
out = which(abs(temp) > 8)
out
abs(temp) > 8
out
apply(abs(temp) > 8, mult)
apply(abs(temp) > 8, 1, mult)
apply(abs(temp) > 8, 1, prod)
apply(abs(temp) > 8, 1, +)
apply(abs(temp) > 8, 1, sum)
which(apply(abs(temp) > 8, 1, sum))
which(apply(abs(temp) > 8, 1, sum) > 0)
acp = prcomp(data)
acp
plot(acp)
biplot(acp)
names(acp)
acp$sdev
acp$rotation
acp$center
acp$scale
acp = princomp(data)
acp
plot(acp)
names(acp)
acp$loadings
acp$scores
biplot(acp)
plot(acp$scores)
acp$sdev
plot(acp$scores * acp$sdev)
plot(acp$scores * acp$loadings)
acp
names(acp)
acp$loadings
as.matrix(acp$loadings)
as.dataframe(acp$loadings)
as.data.frame(acp$loadings)
as.data.frame(acp$loadings)[1:4,]
acp$scores * as.data.frame(acp$loadings)[1:4,]
acp$scores
as.data.frame(acp$scores) * as.data.frame(acp$loadings)[1:4,]
plot(as.data.frame(acp$scores) * as.data.frame(acp$loadings)[1:4,])
plot((as.data.frame(acp$scores) * as.data.frame(acp$loadings)[1:4,])[,1:2])
plot(acp)
biplot(acp)
plot((as.data.frame(acp$scores) * as.data.frame(acp$loadings)[1:4,])[,1:2])
plot(acp$scores)
plot(acp$scores, col = c("red", "blue")[out])
apply(abs(temp) > 8, 1, sum) > 0
plot(acp$scores, col = c("red", "blue")[apply(abs(temp) > 8, 1, sum) > 0])
c("red", "blue")[apply(abs(temp) > 8, 1, sum) > 0]
c("red", "blue")[c(1,0,0,1)]
c("red", "blue")[c(1,2,1,1)]
out = (apply(abs(temp) > 8, 1, sum) > 0) + 1
out
plot(acp$scores, col = c("red", "blue")[out])
out = (apply(abs(temp) > 10, 1, sum) > 0) + 1
plot(acp$scores, col = c("red", "blue")[out])
plot(acp$scores, col = c("blue", "red")[out])
biplot(acp$scores, col = c("blue", "red")[out])
plot(acp$scores, col = c("blue", "red")[out])
data * cor(data)
data %*% cor(data)
matrix(data) %*% cor(data)
as.matrix(data) %*% cor(data)
cor(data)
cor(data)
biplot(prcomp(matrix(data) %*% cor(data)))
biplot(prcomp(as.matrix(data) %*% cor(data)))
setwd("~/Documents/GitHub/cours-2024-2025/tc-stats")
knitr::opts_chunk$set(echo = FALSE, warning = FALSE, message = FALSE)
library(tidyverse)
library(knitr)
library(kableExtra)
set.seed(1234)
x = seq(-5, 5, by = .01)
df = data.frame(x = x, y = dnorm(x))
ggplot(df, aes(x, y)) +
geom_line(color = "steelblue", size = 2) +
labs(x = "", y = "") +
theme_minimal()
